(* --------------------------------------------------------------------
 * Copyright (c) - 2012--2016 - IMDEA Software Institute
 * Copyright (c) - 2012--2018 - Inria
 * Copyright (c) - 2012--2018 - Ecole Polytechnique
 *
 * Distributed under the terms of the CeCILL-B-V1 license
 * -------------------------------------------------------------------- *)

(*** A formalization of pseudo-random functions **)
require import AllCore Distr FSet.

(** A PRF is a family of functions F from domain D to finite range R
    indexed by a keyspace K equipped with a distribution dK. *)
type D, R, K.

op dK: K distr.
axiom dK_ll: mu dK predT = 1%r.

module type PRF = {
  proc keygen(): K
  proc f(_: K * D): R
}.

module type PRF_Oracles = {
  proc init(): unit
  proc f(_: D): R
}.

module type PRF_Oracle = {
  proc f(_: D): R
}.

module type PRF_Distinguisher(F:PRF_Oracle) = {
  proc distinguish(): bool
}.

module IND (F:PRF_Oracles,D:PRF_Distinguisher) = {
  proc main(): bool = {
    var b;

         F.init();
    b <@ D(F).distinguish();
    return b;
  }
}.
